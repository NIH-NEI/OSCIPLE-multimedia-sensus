import csv, argparse, time, datetime, random, traceback
from hashmaker import *

dupe_path = 0
dupe_count = 1
dupe_filesize = 2
dupe_hash = 3

dupes = {}
hashmake = hashMaker()


def dupefullsize(dupecountfile, dupefullfile, skipuntil=0):
    with open(dupecountfile, "r") as dupefile:
        dupecountreader = csv.reader(dupefile)

        with open(dupefullfile, "w") as fullfile:
            fullwriter = csv.writer(fullfile)
        
            dupecountcount = 0
            for dupe in dupecountreader:
                dupecountcount += 1
                print (dupe)

                if dupecountcount > skipuntil:
                    
                    try:
                        startTime = time.time()
                        hashActual = hashmake.makeOneHash(dupe[dupe_path], 999999999999999999999999)
                        timeActual = time.time() - startTime




                        
                        # fullwriter.writerow([dupe[dupe_path], timeActual, onehash, timeOne, twohash, timeTwo, eighthash, timeEight, sixtyfourhash, time64, fivetwelvehash, time512, dupe[dupe_hash]])

                        startTime = time.time()
                        hash256 = 1 if hashmake.makeOneHash(dupe[dupe_path], 256) == hashActual else 0
                        time256 = time.time() - startTime

                        startTime = time.time()
                        hash512 = 1 if hashmake.makeOneHash(dupe[dupe_path], 512) == hashActual else 0
                        time512 = time.time() - startTime

                        startTime = time.time()
                        hash1024 = 1 if hashmake.makeOneHash(dupe[dupe_path], 1024) == hashActual else 0
                        time1024 = time.time() - startTime


                        fullwriter.writerow([dupe[dupe_path], timeActual, hash256, time256, hash512, time512, hash1024, time1024, dupe[dupe_hash]])
                    except:
                        traceback.print_exc()
                else:
                    print ("skipping")





if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog="Dupe Full Size",
                                     description="Given a CSV of dupes generated by Dupe Counter, will go back and scan the full file and see if it's still a duplicate.")
    parser.add_argument('dupecountfile', help="Input CSV file containing dupecount")
    parser.add_argument(
        'dupefullfile', help="Output CSV containing whether or not each dupe is still a dupe")
    parser.add_argument('--skipuntil', help="For continuing incomplete previous scans or otherwise jumping ahead.  Will skip until this file number is encountered.", default=0)
    args = parser.parse_args()

    dupefullsize(args.dupecountfile, args.dupefullfile, int(args.skipuntil))